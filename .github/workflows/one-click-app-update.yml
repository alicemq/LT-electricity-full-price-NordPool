name: Update One-Click App

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update'
        required: true
        default: 'latest'

jobs:
  update-one-click-app:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    
    steps:
    - name: Checkout one-click apps repository
      uses: actions/checkout@v4
      with:
        repository: caprover/one-click-apps
        token: ${{ secrets.ONE_CLICK_APPS_TOKEN }}
        path: one-click-apps

    - name: Checkout current repository
      uses: actions/checkout@v4
      with:
        path: current-repo

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Update one-click app files
      run: |
        cd one-click-apps/public/v4/apps
        
        # Create or update directory
        mkdir -p electricity-prices-nordpool
        
        # Copy files from current repository
        cp -r ../../../current-repo/caprover-oneclick-app/* electricity-prices-nordpool/
        
        # Update version in one-click-app.json
        cd electricity-prices-nordpool
        
        # Get the version from release or input
        VERSION="${{ github.event.release.tag_name || inputs.version }}"
        
        # Update the image tag in one-click-app.json
        if [ -f "one-click-app.json" ]; then
          # Use jq to update the image tag
          jq --arg version "$VERSION" \
             --arg repo "${{ github.repository }}" \
             --arg image "ghcr.io/${{ github.repository }}-oneclick:$VERSION" \
             '.repository.url = "https://github.com/\($repo)" | 
              .image = $image |
              .documentation = "https://github.com/\($repo)"' \
             one-click-app.json > one-click-app.json.tmp
          mv one-click-app.json.tmp one-click-app.json
        fi

    - name: Validate one-click app
      run: |
        cd one-click-apps/public/v4/apps/electricity-prices-nordpool
        
        # Check if required files exist
        required_files=("captain-definition" "Dockerfile" "one-click-app.json" "README.md")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Required file missing: $file"
            exit 1
          fi
        done
        
        # Validate JSON files
        if command -v jq >/dev/null 2>&1; then
          jq empty captain-definition
          jq empty one-click-app.json
          echo "✅ JSON validation passed"
        else
          echo "⚠️ jq not available, skipping JSON validation"
        fi

    - name: Commit and push changes
      run: |
        cd one-click-apps
        
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Check if there are changes
        if git diff --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Commit changes
        git add public/v4/apps/electricity-prices-nordpool/
        git commit -m "Update Electricity Prices NordPool one-click app to v${{ github.event.release.tag_name || inputs.version }}

        - Updated to version ${{ github.event.release.tag_name || inputs.version }}
        - Latest features and improvements
        - Enhanced documentation and validation
        
        Auto-updated by GitHub Actions"
        
        # Push changes
        git push origin main

    - name: Create pull request
      if: github.event_name == 'release'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.ONE_CLICK_APPS_TOKEN }}
        branch: update-electricity-prices-nordpool-${{ github.event.release.tag_name }}
        title: "Update Electricity Prices NordPool to v${{ github.event.release.tag_name }}"
        body: |
          ## App Update: Electricity Prices NordPool
          
          **Version**: ${{ github.event.release.tag_name }}
          **Repository**: ${{ github.repository }}
          
          ### Changes
          - Updated to latest version ${{ github.event.release.tag_name }}
          - Latest features and improvements
          - Enhanced documentation and validation
          - Security updates and bug fixes
          
          ### Release Notes
          ${{ github.event.release.body }}
          
          ### Testing
          - ✅ One-click app validation passed
          - ✅ JSON schema validation passed
          - ✅ Required files present
          - ✅ Docker image available at `ghcr.io/${{ github.repository }}-oneclick:${{ github.event.release.tag_name }}`
          
          ### Auto-generated by GitHub Actions
          This PR was automatically created by the CI/CD pipeline.
        base: main
        delete-branch: true 